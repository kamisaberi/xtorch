<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="videos_8h" kind="file" language="C++">
    <compoundname>videos.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">opencv2/opencv.hpp</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">torch/torch.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="opencv_8h" local="yes">/home/kami/Documents/cpp/models/include/media/opencv/opencv.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/kami/Documents/cpp/models/include/media/opencv/videos.h</label>
        <link refid="videos_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>filesystem</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="5">
        <label>torch/torch.h</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/kami/Documents/cpp/models/include/media/media.h</label>
        <link refid="media_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/kami/Documents/cpp/models/include/media/opencv/opencv.h</label>
        <link refid="opencv_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/kami/Documents/cpp/models/include/media/opencv/videos.h</label>
        <link refid="videos_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/kami/Documents/cpp/models/include/xtorch.h</label>
        <link refid="xtorch_8h_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacetorch">torch</innernamespace>
    <innernamespace refid="namespacetorch_1_1ext">torch::ext</innernamespace>
    <innernamespace refid="namespacetorch_1_1ext_1_1media">torch::ext::media</innernamespace>
    <innernamespace refid="namespacetorch_1_1ext_1_1media_1_1opencv">torch::ext::media::opencv</innernamespace>
    <innernamespace refid="namespacetorch_1_1ext_1_1media_1_1opencv_1_1videos">torch::ext::media::opencv::videos</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/opencv.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/torch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>=<sp/>std::filesystem;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">torch::ext::media::opencv::videos<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;cv::Mat&gt;<sp/><sp/>extractFrames(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>videoFilePath);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;torch::Tensor&gt;<sp/>extractVideoFramesAsTensor(fs::path<sp/>videoFilePath);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kami/Documents/cpp/models/include/media/opencv/videos.h"/>
  </compounddef>
</doxygen>
