<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="mnist_8h" kind="file" language="C++">
    <compoundname>mnist.h</compoundname>
    <includes refid="datasets_2base_2base_8h" local="yes">../base/base.h</includes>
    <includes refid="headers_2datasets_8h" local="yes">../../headers/datasets.h</includes>
    <includedby refid="image-classification_8h" local="yes">/home/kami/Documents/cpp/models/include/datasets/image-classification/image-classification.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>../base/base.h</label>
        <link refid="datasets_2base_2base_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/kami/Documents/cpp/models/include/datasets/image-classification/mnist.h</label>
        <link refid="mnist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>../definitions/transforms.h</label>
        <link refid="definitions_2transforms_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>../exceptions/implementation.h</label>
        <link refid="implementation_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../../headers/datasets.h</label>
        <link refid="headers_2datasets_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>../headers/transforms.h</label>
        <link refid="headers_2transforms_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>../media/opencv/images.h</label>
        <link refid="images_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>../transforms/base/base.h</label>
        <link refid="transforms_2base_2base_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>../compose.h</label>
        <link refid="compose_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>../convert.h</label>
        <link refid="convert_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>../crop.h</label>
        <link refid="crop_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>../cutout.h</label>
        <link refid="cutout_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>../flip.h</label>
        <link refid="flip_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>../gaussian.h</label>
        <link refid="gaussian_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>../grayscale.h</label>
        <link refid="grayscale_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>../jitter.h</label>
        <link refid="jitter_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>../lambda.h</label>
        <link refid="lambda_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>../normalize.h</label>
        <link refid="normalize_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>../pad.h</label>
        <link refid="pad_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>../resize.h</label>
        <link refid="resize_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>../rotation.h</label>
        <link refid="rotation_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>../types/arguments.h</label>
        <link refid="arguments_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>enums.h</label>
        <link refid="enums_8h_source"/>
      </node>
      <node id="10">
        <label>../utils/downloader.h</label>
        <link refid="downloader_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../utils/extract.h</label>
        <link refid="extract_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>../utils/md5.h</label>
        <link refid="md5_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>archive.h</label>
      </node>
      <node id="19">
        <label>archive_entry.h</label>
      </node>
      <node id="36">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>curl/curl.h</label>
      </node>
      <node id="23">
        <label>fcntl.h</label>
      </node>
      <node id="5">
        <label>filesystem</label>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="35">
        <label>functional</label>
      </node>
      <node id="27">
        <label>iomanip</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="22">
        <label>libtar.h</label>
      </node>
      <node id="24">
        <label>lzma.h</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="37">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="29">
        <label>openssl/err.h</label>
      </node>
      <node id="28">
        <label>openssl/evp.h</label>
      </node>
      <node id="38">
        <label>random</label>
      </node>
      <node id="25">
        <label>stdexcept</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="20">
        <label>sys/stat.h</label>
      </node>
      <node id="17">
        <label>tar.h</label>
      </node>
      <node id="40">
        <label>torch/data.h</label>
      </node>
      <node id="33">
        <label>torch/data/datasets/mnist.h</label>
      </node>
      <node id="34">
        <label>torch/data/transforms/base.h</label>
      </node>
      <node id="9">
        <label>torch/torch.h</label>
      </node>
      <node id="7">
        <label>tuple</label>
      </node>
      <node id="21">
        <label>unistd.h</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="15">
        <label>zip.h</label>
      </node>
      <node id="16">
        <label>zlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/kami/Documents/cpp/models/include/datasets/datasets.h</label>
        <link refid="datasets_2datasets_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/kami/Documents/cpp/models/include/datasets/image-classification/image-classification.h</label>
        <link refid="image-classification_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/kami/Documents/cpp/models/include/datasets/image-classification/mnist.h</label>
        <link refid="mnist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/kami/Documents/cpp/models/include/xtorch.h</label>
        <link refid="xtorch_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classxt_1_1data_1_1datasets_1_1MNISTBase" prot="public">xt::data::datasets::MNISTBase</innerclass>
    <innerclass refid="classxt_1_1data_1_1datasets_1_1MNIST" prot="public">xt::data::datasets::MNIST</innerclass>
    <innerclass refid="classxt_1_1data_1_1datasets_1_1FashionMNIST" prot="public">xt::data::datasets::FashionMNIST</innerclass>
    <innerclass refid="classxt_1_1data_1_1datasets_1_1KMNIST" prot="public">xt::data::datasets::KMNIST</innerclass>
    <innerclass refid="classxt_1_1data_1_1datasets_1_1EMNIST" prot="public">xt::data::datasets::EMNIST</innerclass>
    <innerclass refid="classxt_1_1data_1_1datasets_1_1QMNIST" prot="public">xt::data::datasets::QMNIST</innerclass>
    <innernamespace refid="namespacext">xt</innernamespace>
    <innernamespace refid="namespacext_1_1data">xt::data</innernamespace>
    <innernamespace refid="namespacext_1_1data_1_1datasets">xt::data::datasets</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../base/base.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../headers/datasets.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>=<sp/>std::filesystem;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xt::data::datasets<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classxt_1_1data_1_1datasets_1_1MNISTBase" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MNISTBase<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>BaseDataset<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>MNISTBase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNISTBase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNISTBase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNISTBase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>,<sp/>vector&lt;std::function&lt;torch::Tensor(torch::Tensor)&gt;&gt;<sp/>transforms);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>~MNISTBase()<sp/>override;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>read_images(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_images);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>read_labels(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>torch::data::Example&lt;&gt;<sp/>get(size_t<sp/>index)<sp/>override;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>torch::optional&lt;size_t&gt;<sp/>size()<sp/>const<sp/>override;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;torch::Tensor&gt;<sp/>data;<sp/>//<sp/>Store<sp/>image<sp/>data<sp/>as<sp/>tensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;uint8_t&gt;<sp/>labels;<sp/>//<sp/>Store<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>download<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fs::path<sp/>root;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fs::path<sp/>dataset_path;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xt::data::transforms::Compose<sp/>compose;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>transform_data(std::vector&lt;torch::data::transforms::Lambda&lt;torch::data::Example&lt;&gt;<sp/>&gt;<sp/>&gt;<sp/>transforms);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vector&lt;std::function&lt;torch::Tensor(torch::Tensor)&gt;&gt;<sp/>transforms<sp/>=<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classxt_1_1data_1_1datasets_1_1MNIST" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MNIST<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MNISTBase<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>public<sp/>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>MNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>,<sp/>vector&lt;std::function&lt;torch::Tensor(torch::Tensor)&gt;&gt;<sp/>transforms);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>MNIST(const<sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN,<sp/>bool<sp/>download<sp/>=<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MNIST(const<sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN,<sp/>bool<sp/>download<sp/>=<sp/>false<sp/>,<sp/>std::shared_ptr&lt;xt::data::transforms::Compose&gt;<sp/>compose=<sp/>nullptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MNIST(const<sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN,<sp/>bool<sp/>download<sp/>=<sp/>false,<sp/>vector&lt;std::function&lt;torch::Tensor(torch::Tensor)&gt;&gt;<sp/>transforms=<sp/>{});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::path<sp/>&amp;root,<sp/><ref refid="structDatasetArguments" kindref="compound">DatasetArguments</ref><sp/>args);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>private<sp/>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>url<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;https://ossci-datasets.s3.amazonaws.com/mnist/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>dataset_folder_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MNIST/raw&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;tuple&lt;fs::path,<sp/>std::string&gt;<sp/>&gt;<sp/>resources<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-images-idx3-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;f68b3c2dcbeaaa9fbdd348bbdeb94873&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-labels-idx1-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;d53e105ee54ea40749a09fcbcd1e9432&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-images-idx3-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;9fb629c4189551a2d022fa330f9573f3&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-labels-idx1-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;ec29112dd5afa0611ce80d1b7f02629c&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;fs::path,<sp/>fs::path&gt;<sp/>&gt;<sp/>files<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">,<sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-images-idx3-ubyte&quot;</highlight><highlight class="normal">),<sp/>fs::path(</highlight><highlight class="stringliteral">&quot;train-labels-idx1-ubyte&quot;</highlight><highlight class="normal">)}},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-images-idx3-ubyte&quot;</highlight><highlight class="normal">),<sp/>fs::path(</highlight><highlight class="stringliteral">&quot;t10k-labels-idx1-ubyte&quot;</highlight><highlight class="normal">)}}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load_data(DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_resources(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>transform_data();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classxt_1_1data_1_1datasets_1_1FashionMNIST" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FashionMNIST<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MNISTBase<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>FashionMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FashionMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FashionMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FashionMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>,<sp/>vector&lt;std::function&lt;torch::Tensor(torch::Tensor)&gt;&gt;<sp/>transforms);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FashionMNIST(const<sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN,<sp/>bool<sp/>download<sp/>=<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FashionMNIST(const<sp/>fs::path<sp/>&amp;root,<sp/>DatasetArguments<sp/>args);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>url<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>dataset_folder_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FashionMNIST/raw&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;tuple&lt;fs::path,<sp/>std::string&gt;<sp/>&gt;<sp/>resources<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-images-idx3-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;8d4fb7e6c68d591d4c3dfef9ec88bf0d&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-labels-idx1-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;25c81989df183df01b3e8a0aad5dffbe&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-images-idx3-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;bef4ecab320f06d8554ea6380940ec79&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-labels-idx1-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;bb300cfdad3c16e7a12a480ee83cd310&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;fs::path,<sp/>fs::path&gt;<sp/>&gt;<sp/>files<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">,<sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-images-idx3-ubyte&quot;</highlight><highlight class="normal">),<sp/>fs::path(</highlight><highlight class="stringliteral">&quot;train-labels-idx1-ubyte&quot;</highlight><highlight class="normal">)}},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-images-idx3-ubyte&quot;</highlight><highlight class="normal">),<sp/>fs::path(</highlight><highlight class="stringliteral">&quot;t10k-labels-idx1-ubyte&quot;</highlight><highlight class="normal">)}}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load_data(DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_resources(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classxt_1_1data_1_1datasets_1_1KMNIST" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KMNIST<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MNISTBase<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>public<sp/>:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::path<sp/>&amp;root,<sp/><ref refid="structDatasetArguments" kindref="compound">DatasetArguments</ref><sp/>args);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>url<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;http://codh.rois.ac.jp/kmnist/dataset/kmnist/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>dataset_folder_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;KMNIST/raw&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;tuple&lt;fs::path,<sp/>std::string&gt;<sp/>&gt;<sp/>resources<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-images-idx3-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;bdb82020997e1d708af4cf47b453dcf7&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-labels-idx1-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;e144d726b3acfaa3e44228e80efcd344&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-images-idx3-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;5c965bf0a639b31b8f53240b1b52f4d7&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-labels-idx1-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;7320c461ea6c1c855c0b718fb2a4b134&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;fs::path,<sp/>fs::path&gt;<sp/>&gt;<sp/>files<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">,<sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;train-images-idx3-ubyte&quot;</highlight><highlight class="normal">),<sp/>fs::path(</highlight><highlight class="stringliteral">&quot;train-labels-idx1-ubyte&quot;</highlight><highlight class="normal">)}},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;t10k-images-idx3-ubyte&quot;</highlight><highlight class="normal">),<sp/>fs::path(</highlight><highlight class="stringliteral">&quot;t10k-labels-idx1-ubyte&quot;</highlight><highlight class="normal">)}}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load_data(DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_resources(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classxt_1_1data_1_1datasets_1_1EMNIST" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EMNIST<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MNISTBase<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>public<sp/>:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::path<sp/>&amp;root,<sp/><ref refid="structDatasetArguments" kindref="compound">DatasetArguments</ref><sp/>args);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>url<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;https://biometrics.nist.gov/cs_links/EMNIST/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>dataset_folder_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EMNIST/raw&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>archive_file_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;gzip.zip&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>archive_file_md5<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;58c8d27c78d21e728a6bc7b3cc06412e&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load_data(DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_resources(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classxt_1_1data_1_1datasets_1_1QMNIST" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QMNIST<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MNISTBase<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>public<sp/>:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/>DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMNIST(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::path<sp/>&amp;root,<sp/><ref refid="structDatasetArguments" kindref="compound">DatasetArguments</ref><sp/>args);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>url<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;https://raw.githubusercontent.com/facebookresearch/qmnist/master/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>dataset_path;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>dataset_folder_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;QMNIST/raw&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>archive_file_md5<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;58c8d27c78d21e728a6bc7b3cc06412e&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;string,<sp/>std::vector&lt;std::tuple&lt;fs::path,<sp/>std::string&gt;<sp/>&gt;<sp/>&gt;<sp/>resources<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">,<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;qmnist-train-images-idx3-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;ed72d4157d28c017586c42bc6afe6370&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;qmnist-train-labels-idx2-int.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;0058f8dd561b90ffdd0f734c6a30e5e4&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;qmnist-test-images-idx3-ubyte.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;1394631089c404de565df7b7aeaf9412&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;qmnist-test-labels-idx2-int.gz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;5b5b05890a5e13444e108efe57b788aa&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nist&quot;</highlight><highlight class="normal">,<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;xnist-images-idx3-ubyte.xz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;7f124b3b8ab81486c9d8c2749c17f834&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{fs::path(</highlight><highlight class="stringliteral">&quot;xnist-labels-idx2-int.xz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;5ed0e788978e45d4a8bd4b7caec3d79d&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load_data(DataMode<sp/>mode<sp/>=<sp/>DataMode::TRAIN);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_resources(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;root,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>download<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kami/Documents/cpp/models/include/datasets/image-classification/mnist.h"/>
  </compounddef>
</doxygen>
