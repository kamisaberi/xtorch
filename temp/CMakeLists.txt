cmake_minimum_required(VERSION 3.28 FATAL_ERROR)


# List Of All CPP Files By Category
#file(GLOB_RECURSE BASE_FILES CONFIGURE_DEPENDS ../src/base/*.cpp)
#file(GLOB_RECURSE UTILITY_FILES CONFIGURE_DEPENDS ../src/utils/*.cpp)
#file(GLOB_RECURSE MEDIA_FILES CONFIGURE_DEPENDS ../src/media/*.cpp)
#file(GLOB_RECURSE DATASET_FILES CONFIGURE_DEPENDS ../src/datasets/*.cpp)
#file(GLOB_RECURSE DEFINITION_FILES CONFIGURE_DEPENDS ../src/definitions/*.cpp)
#file(GLOB_RECURSE MODEL_FILES CONFIGURE_DEPENDS ../src/models/*.cpp)
#file(GLOB_RECURSE MODEL_CNN_FILES CONFIGURE_DEPENDS ../src/models/cnn/*.cpp)
#file(GLOB_RECURSE DATA_LOADER_FILES CONFIGURE_DEPENDS ../src/data_loaders/*.cpp)
#file(GLOB_RECURSE DATA_PARALLEL_FILES CONFIGURE_DEPENDS ../src/data_parallels/*.cpp)
#file(GLOB_RECURSE TRAINER_FILES CONFIGURE_DEPENDS ../src/trainers/*.cpp)
#file(GLOB_RECURSE TRANSFORM_FILES CONFIGURE_DEPENDS ../src/transforms/*.cpp)


file(GLOB_RECURSE ACTIVATION_FILES CONFIGURE_DEPENDS ../src/activations/*.cpp)
file(GLOB_RECURSE BASE_FILES CONFIGURE_DEPENDS ../src/base/*.cpp)
file(GLOB_RECURSE DROPOUT_FILES CONFIGURE_DEPENDS ../src/dropouts/*.cpp)

file(GLOB_RECURSE DATA_LOADER_FILES CONFIGURE_DEPENDS ../src/data_loaders/*.cpp)
file(GLOB_RECURSE DATA_PARALLEL_FILES CONFIGURE_DEPENDS ../src/data_parallels/*.cpp)
file(GLOB_RECURSE DATASET_FILES CONFIGURE_DEPENDS ../src/datasets/*.cpp)

file(GLOB_RECURSE LOSS_FILES CONFIGURE_DEPENDS ../src/losses/*.cpp)

file(GLOB_RECURSE MODEL_FILES CONFIGURE_DEPENDS ../src/models/*.cpp)

file(GLOB_RECURSE NORMALIZATION_FILES CONFIGURE_DEPENDS ../src/normalizations/*.cpp)
file(GLOB_RECURSE OPTIMIZATION_FILES CONFIGURE_DEPENDS ../src/optimizations/*.cpp)

file(GLOB_RECURSE TRAINER_FILES CONFIGURE_DEPENDS ../src/trainers/*.cpp)
file(GLOB_RECURSE TRANSFORM_FILES CONFIGURE_DEPENDS ../src/transforms/*.cpp)
file(GLOB_RECURSE UTILITY_FILES CONFIGURE_DEPENDS ../src/utils/*.cpp)


set(BASE_SOURCE_FILES
        ../src/utils/extract.cpp
        ../src/utils/downloader.cpp
        ../src/utils/filesystem.cpp
        ../src/utils/md5.cpp
        ../src/utils/string.cpp
        ../src/utils/images.cpp
        ../src/transforms/appliers/compose.cpp
        ../src/transforms/general/normalize.cpp
        ../src/transforms/image/resize.cpp
        ../src/transforms/lambda.cpp
        ../src/datasets/base/base.cpp
        ../src/models/base.cpp
        ../src/base/module.cpp
        ../src/base/tensor.cpp
        ../src/base/dataset.cpp
)


####################################### TEST #######################################


#project(Test)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ../src/datasets/mnist.cpp test.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#
#
#)


####################################### MD #######################################


#project(md)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#
#set(TEST_SOURCE_FILES ../src/utils/md5.cpp md.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#
#
#)


####################################### MD2 #######################################


#project(md2)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ../src/utils/md5.cpp md2.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#
#
#)

####################################### XZ #######################################


#project(xz)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES xz.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#
#)


####################################### LETEST #######################################


#project(letest)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ../src/datasets/mnist.cpp ../src/models/cnn/lenet5.cpp letest.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#
#)

####################################### MNT #######################################


#project(mnt)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ../src/models/cnn/lenet5.cpp mnt.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#
#)

####################################### TGZ #######################################

#project(tgz)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES} tgz.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


####################################### IMGNT #######################################

#project(imgnt)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES} imgnt.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


####################################### VDTEST #######################################

#project(vdtest)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES} vdtest.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


####################################### CNTFILES #######################################

#project(cntfiles)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES} cntfiles.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


####################################### IMGRESIZE #######################################

#project(imgresize)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
#find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES} imgresize.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


# ================================================= IN USE ========================================================== #


######################################## DLTEST3 #######################################
#
#project(dltest3)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES} ${TRANSFORM_FILES} dltest3.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


######################################## DLTEST4 #######################################
#
#project(dltest4)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRANSFORM_FILES} ../src/datasets/base/base.cpp ../src/datasets/image_classification/mnist.cpp dltest4.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


######################################## TRTEST #######################################
#
#project(trtest)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRANSFORM_FILES} ../src/datasets/base/base.cpp ../src/datasets/image_classification/mnist.cpp trtest.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## TRTEST2 #######################################
#
#project(trtest2)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRANSFORM_FILES} ../src/datasets/base/base.cpp ../src/datasets/image_classification/mnist.cpp trtest2.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## MNTCOMP #######################################
#
#project(mntcomp)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRANSFORM_FILES}  ../src/datasets/base/base.cpp ../src/datasets/image_classification/mnist.cpp mntcomp.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## MNTCOMP2 #######################################
#
#project(mntcomp2)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRAINER_FILES} ${DATA_LOADER_FILES} ${TRANSFORM_FILES}
#        ../src/trainers/trainer.cpp
#        ../src/datasets/base/base.cpp ../src/datasets/image_classification/mnist.cpp
#        ../src/datasets/image_classification/cifar_10.cpp ../src/datasets/image_classification/imagenette.cpp
#        ../src/datasets/base/base.cpp mntcomp2.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## CNPYTEST #######################################
#
#project(cnpytest)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES  ../third_party/cnpy/cnpy.cpp cnpytest.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
#
#
######################################## CSVTEST #######################################
#
#project(csvtest)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRAINER_FILES} ${DATA_LOADER_FILES} ${TRANSFORM_FILES} csvtest.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
#
#
######################################## EDFWRITER #######################################
#
#project(edfwriter)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRAINER_FILES} ${DATA_LOADER_FILES} ${TRANSFORM_FILES} ../third_party/edflib/edflib.c edfwriter.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
#
######################################## EDFREADER #######################################
#
#project(edfreader)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(TorchExtension REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRAINER_FILES} ${DATA_LOADER_FILES} ${TRANSFORM_FILES} ../third_party/edflib/edflib.c edfreader.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## EEGREADER #######################################
#
#project(eegreader)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${MODEL_FILES} ${TRAINER_FILES} ${DATA_LOADER_FILES} ${TRANSFORM_FILES} ../third_party/edflib/edflib.c eegreader.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
#
######################################## CURLPRG #######################################
#
#project(curlprg)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
#
######################################## CURLPRG2 #######################################
#
#project(curlprg2)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg2.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## CURLPRG3 #######################################
#
#project(curlprg3)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg3.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
######################################## CURLPRG4 #######################################
#
#project(curlprg4)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg4.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## CURLPRG5 #######################################
#
#project(curlprg5)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg5.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
######################################## CURLPRG6 #######################################
#
#project(curlprg6)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg6.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
#
######################################## CURLPRG7 #######################################
#
#project(curlprg7)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg7.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## CURLPRG8 #######################################
#
#project(curlprg8)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg8.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
######################################## CURLPRG9 #######################################
#
#project(curlprg9)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg9.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## CURLPRG10 #######################################
#
#project(curlprg10)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES curlprg10.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
#
######################################## LENET5PARAMETRIC #######################################
#
#project(lenet5parametric)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES}  ${BASE_SOURCE_FILES}   lenet5parametric.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#


######################################## VGGNETPARAMETRIC #######################################
#
#project(vggnetparametric)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES}  ${BASE_SOURCE_FILES}   vggnetparametric.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## ALEXNETPARAMETRIC #######################################
#
#project(alexnetparametric)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES}  ${BASE_SOURCE_FILES}   alexnetparametric.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## RESNETPARAMETRIC #######################################
#
#project(resnetparametric)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES}  ${BASE_SOURCE_FILES}   resnetparametric.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


######################################## CUSTOMDATALOADER #######################################
#
#project(cdl01)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES} ${BASE_SOURCE_FILES} 01/cdl-01.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## CUSTOMDATALOADERMNIST #######################################
#
#project(cdl_mnist)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ${DATASET_FILES} ${MODEL_FILES} ${BASE_SOURCE_FILES} 01/cdl_mnist.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## CUSTOMDATALOADERNUMWORKERS #######################################
#
#project(cdl_nw_mnist)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} 01/cdl_nw_mnist.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## DATA-PARALLEL-00 #######################################
#
#project(dp_00)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} 02/dp-00.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
######################################## DATA-PARALLEL-01 #######################################
#
#project(dp_01)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} 02/dp-01.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## DATA-PARALLEL-02 #######################################
#
#project(dp_02)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} 02/dp-02.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## DATA-PARALLEL-03 #######################################
#
#project(dp_03)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} 02/dp-03.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## DATA-PARALLEL-FINAL #######################################
#
#project(dp_final)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} ../src/data_parallels/data_parallel.cpp 02/dp-final.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#
#
######################################## DISTRIBUTED-DATA-PARALLEL-03 #######################################
#
#project(ddp_01)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(TEST_SOURCE_FILES ${UTILITY_FILES} ${MEDIA_FILES} ${DEFINITION_FILES} 02/ddp_01.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)


####################################### XT_MODULE_1_TEST #######################################

project(xt_module_0)
list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
find_package(Torch REQUIRED)
#find_package(xTorch REQUIRED)
find_package(OpenCV REQUIRED)
find_package(LibLZMA REQUIRED)
find_package(LibArchive REQUIRED)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(BASE_SOURCE_FILES
        ../src/base/module1.cpp
        ../src/datasets/computer_vision/image_classification/mnist.cpp
)


set(TEST_SOURCE_FILES ${BASE_FILES} xt_module/xt_module0_test.cpp)

add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
#
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)

include_directories(/usr/include)

target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
target_link_libraries(${PROJECT_NAME}
        ${CURL_LIBRARIES}
        ${TORCH_LIBRARIES}
        ${OpenCV_LIBS}
        ${ZLIB_LIBS}
        ${ZIP_LIBRARIES}
        zip
        ${ZLIB_LIBRARIES}
        ${LIBTAR_LIBRARY}
        OpenSSL::SSL
        OpenSSL::Crypto
        LibLZMA::LibLZMA
        ${LibArchive_LIBRARIES}
)


######################################## XT_MODULE_2_TEST #######################################
#
#project(xt_module_2)
#list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
#find_package(Torch REQUIRED)
##find_package(xTorch REQUIRED)
#find_package(OpenCV REQUIRED)
#find_package(LibLZMA REQUIRED)
#find_package(LibArchive REQUIRED)
#
#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_STANDARD_REQUIRED True)
#
#set(BASE_SOURCE_FILES
#        ../src/base/module1.cpp
#)
#
#
#set(TEST_SOURCE_FILES ${BASE_FILES} xt_module/xt_module2_test.cpp)
#
#add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
#target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
##
#set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
#
#include_directories(/usr/include)
#
#target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
#target_link_libraries(${PROJECT_NAME}
#        ${CURL_LIBRARIES}
#        ${TORCH_LIBRARIES}
#        ${OpenCV_LIBS}
#        ${ZLIB_LIBS}
#        ${ZIP_LIBRARIES}
#        zip
#        ${ZLIB_LIBRARIES}
#        ${LIBTAR_LIBRARY}
#        OpenSSL::SSL
#        OpenSSL::Crypto
#        LibLZMA::LibLZMA
#        ${LibArchive_LIBRARIES}
#)
#


####################################### DL_with_buffer_and_torch_dataset #######################################

project(dl_with_buffer_and_torch_dataset)
list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
find_package(Torch REQUIRED)
#find_package(xTorch REQUIRED)
find_package(OpenCV REQUIRED)
find_package(LibLZMA REQUIRED)
find_package(LibArchive REQUIRED)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(BASE_SOURCE_FILES
        ../src/base/module1.cpp
)


set(TEST_SOURCE_FILES ${BASE_FILES} dl/dl_with_buffer_and_torch_dataset.cpp)

add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
#
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)

include_directories(/usr/include)

target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
target_link_libraries(${PROJECT_NAME}
        ${CURL_LIBRARIES}
        ${TORCH_LIBRARIES}
        ${OpenCV_LIBS}
        ${ZLIB_LIBS}
        ${ZIP_LIBRARIES}
        zip
        ${ZLIB_LIBRARIES}
        ${LIBTAR_LIBRARY}
        OpenSSL::SSL
        OpenSSL::Crypto
        LibLZMA::LibLZMA
        ${LibArchive_LIBRARIES}
)

####################################### DL_with_buffer_without_torch_dataset #######################################

project(dl_with_buffer_without_torch_dataset)
list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
find_package(Torch REQUIRED)
#find_package(xTorch REQUIRED)
find_package(OpenCV REQUIRED)
find_package(LibLZMA REQUIRED)
find_package(LibArchive REQUIRED)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(BASE_SOURCE_FILES
        ../src/base/module1.cpp
)


set(TEST_SOURCE_FILES ${BASE_FILES} dl/dl_with_buffer_without_torch_dataset.cpp)

add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
#
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)

include_directories(../${CMAKE_SOURCE_DIR} /usr/include)

target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
target_link_libraries(${PROJECT_NAME}
        ${CURL_LIBRARIES}
        ${TORCH_LIBRARIES}
        ${OpenCV_LIBS}
        ${ZLIB_LIBS}
        ${ZIP_LIBRARIES}
        zip
        ${ZLIB_LIBRARIES}
        ${LIBTAR_LIBRARY}
        OpenSSL::SSL
        OpenSSL::Crypto
        LibLZMA::LibLZMA
        ${LibArchive_LIBRARIES}
)

####################################### MNIST #######################################

project(mnist)
list(APPEND CMAKE_PREFIX_PATH /home/kami/libs/c++/libtorch/)
find_package(Torch REQUIRED)
#find_package(xTorch REQUIRED)
find_package(OpenCV REQUIRED)
find_package(LibLZMA REQUIRED)
find_package(LibArchive REQUIRED)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(BASE_SOURCE_FILES
        ../src/base/module1.cpp
        ../src/datasets/computer_vision/image_classification/mnist.cpp
        ../src/base/dataset.cpp
        ../src/base/module.cpp
)

#ACTIVATION_FILES
#BASE_FILES
#DROPOUT_FILES
#DATA_LOADER_FILES
#DATA_PARALLEL_FILES
#DATASET_FILES
#LOSS_FILES
#MODEL_FILES
#NORMALIZATION_FILES
#OPTIMIZATION_FILES
#TRAINER_FILES
#TRANSFORM_FILES
#UTILITY_FILES
#


set(TEST_SOURCE_FILES
#        ${ACTIVATION_FILES}
        ${BASE_FILES}
#        ${DROPOUT_FILES}
        ${DATA_LOADER_FILES}
#        ${DATA_PARALLEL_FILES}
#        ${DATASET_FILES}
        ../src/datasets/computer_vision/image_classification/mnist.cpp
#        ${LOSS_FILES}
        ../src/models/computer_vision/image_classification/lenet5.cpp
#        ${NORMALIZATION_FILES}
#        ${OPTIMIZATION_FILES}
        ${TRAINER_FILES}
        ${TRANSFORM_FILES}
        ${UTILITY_FILES}
        ds/mnist.cpp)

add_executable(${PROJECT_NAME} ${TEST_SOURCE_FILES})
target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}")
#
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)

include_directories(/usr/include)

target_include_directories(${PROJECT_NAME} PRIVATE ${LIBTAR_INCLUDE_DIR} ${TORCH_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
target_link_libraries(${PROJECT_NAME}
        ${CURL_LIBRARIES}
        ${TORCH_LIBRARIES}
        ${OpenCV_LIBS}
        ${ZLIB_LIBS}
        ${ZIP_LIBRARIES}
        zip
        ${ZLIB_LIBRARIES}
        ${LIBTAR_LIBRARY}
        OpenSSL::SSL
        OpenSSL::Crypto
        LibLZMA::LibLZMA
        ${LibArchive_LIBRARIES}
)
